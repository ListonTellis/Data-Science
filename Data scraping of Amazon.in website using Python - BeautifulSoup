---------------------------------------------------------- AIM -------------------------------------------------------------------------------------------------------------------------------------------
To scrape Amazon.in website using Pyhon and BeautifulSoup to get a list of mobile phones and other related information.First we will analyse step by step to understand the scraping process.
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Import 'get' from 'requests' library to get access to Amazon.in wesite.
from requests import get
url='https://www.amazon.in/s/ref=br_asw_smr/259-1839946-1565333?_encoding=UTF8&bbn=1805560031&rh=i%3Aelectronics%2Cn%3A976419031%2Cn%3A%21976420031%2Cn%3A1389401031%2Cp_36%3A1000000-1500000%2Cn%3A1389432031%2Cn%3A1805560031%2Cp_98%3A10440597031&pf_rd_m=A1VBAL9TL5WCBF&pf_rd_s=&pf_rd_r=51FMM0M7J66F92EHZJDX&pf_rd_t=36701&pf_rd_p=0ca80efe-64ad-4f7a-9e73-4d4937945d09&pf_rd_i=desktop'
response=get(url)


--Import 'BeautifulSoup' from 'bs4' library to start scraping the data.
from bs4 import BeautifulSoup


--Create a 'Soup' to load all the data from the required page. Here 'html.parser' is the pyhton command used for scraping.
html_soup=BeautifulSoup(response.text,'html.parser')


--Inspect the required Amazon.in page and get the required details to scrape each of the mobile's data.
page_container=html_soup.find_all('div',class_='s-item-container')


--select the first content of 'page_container' ,which gives information about the first mobile phone in the list
first_mobile=page_container[0]

--(selected elements vary for different pages,inspect carefully and select the required info)

-- To get the name of the first mobile phone
mobile_name=name=first_mobile.h2.text


--To get MRP of the first mobile phone
MRP=first_mobile.find('span',class_='a-text-strike').text.rstrip()[2:]


--To get offer_price of the first mobile phone
offer_price=first_mobile.find('span',class_='a-size-base a-color-price s-price a-text-bold').text.rstrip()[2:]


--To get the total discount on first mobile phone
total_savings=first_mobile.find('span',class_='a-size-small a-color-price').text.rstrip()[2:].lstrip()[:5]

--To get the seller name of the first mobile phone
seller=first_mobile.find_all('span',class_='a-size-small a-color-secondary')
seller=seller[1].text

-------------------------------------------------------------------------------------------------------------------------------


-- Code to get the list of all the mobile phones with other details

names=[]
sellers=[]
prices=[]
old_prices=[]
total_savings=[]


for loop1 in every:
    name=loop1.h2.text
    names.append(name)
    
    seller=loop1.find_all('span',class_='a-size-small a-color-secondary')
    seller=seller[1].text
    sellers.append(seller)
    
    price=loop1.find('span',class_='a-size-base a-color-price s-price a-text-bold').text.rstrip()[2:]
    prices.append(price)
    
    old_price=loop1.find('span',class_='a-text-strike')
    if old_price is not None:
        old_price=old_price.text.rstrip()[2:]
        old_prices.append(old_price)
    else:
         old_prices.append(price)
    
    savings=loop1.find('span',class_='a-size-small a-color-price')
    if savings is not None:
        savings=savings.text.rstrip()[2:].lstrip()[:5]
        total_savings.append(savings)
    else:
        total_savings.append('0')
    
mob_list=pd.DataFrame({'Device_name':names,'Seller':sellers,'Offer_price':prices,'MRP':old_prices,'Total_savings':total_savings})
mob_list
